@model TasksWebAPP.Models.TarefaModel

@{
    ViewData["Title"] = "Editar Tarefa";
}



<h1>Editar Tarefa: @Model.Name</h1>
<script>

    async function RequestAjax(url, params, metodo) {
        metodo = metodo == undefined || metodo == "" ? "GET" : metodo;

        let result;

        await $.ajax({
            url: url,
            data: params,
            method: metodo,
            async: true
        }).done(async function (data) {
            result = data;
        });

        return result;
    }

    async function editar() {
        // Obtenha os valores dos campos do formulário
        var name = document.getElementById("Name").value;
        var description = document.getElementById("Description").value;
        var status = document.getElementById("Status").value;

        // Crie um objeto com os dados do formulário
        var data = {
            Name: name,
            Description: description,
            Status: status,
        };

        console.log(data)

        const req = await RequestAjax("/Tarefa/EditarTarefa", { tarefa: data, id: @Model.Id  }, "PUT")
        if (!req.erro) {
            window.location.href = '/Tarefa/Index'
        }
    }

    function preencherSelect() {
        var status = @Model.Status; // Obtém o valor do modelo
        console.log(status)
        var select = document.getElementById("Status"); // Obtém o elemento select
        select.value = status; // Define o valor selecionado no select
    }

    // Chama a função para preencher o select ao carregar a página
    window.onload = function () {
        preencherSelect();
    };
</script>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="formEditar">
            <div class="form-group">
                <label for="Name" class="control-label">Nome:</label>
                <input type="text" class="form-control" id="Name" name="Name" value="@Model.Name">
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Description" class="control-label">Descrição:</label>
                <input type="text" class="form-control" id="Description" name="Description" value="@Model.Description">
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Status" class="control-label">Status:</label>
                <select class="form-control" id="Status" name="Status" >
                    <option value="1">A fazer</option>
                    <option value="2">Em andamento</option>
                    <option value="3">Concluído</option>
                </select>
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="button" class="mt-4 btn btn-primary" onclick="editar()">Salvar</button>
            </div>
        </form>
    </div>
</div>


<div>
    <a asp-action="Index">Voltar para tarefas</a>
</div>

